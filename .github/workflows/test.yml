
name: Tests
on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: [ main ]
  pull_request:

jobs:
  clippy:
    name: üìé fmt and clippy
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup update
          rustup toolchain install nightly
          rustup default nightly
          rustup component add clippy rustfmt
      - run: cargo fmt -- --check
      - run: cargo clippy --all --all-targets --all-features
      - run: cargo bench

  test:
    name: üß™ Tests
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - run: cargo build --all-features
      - run: cargo doc
      - run: cargo test --all-features
        env:
          RUST_BACKTRACE: 1

  cov:
    name: ‚òÇÔ∏è Coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v4
      - name: Generate code coverage
        run: cargo tarpaulin -p ptrie --doc --tests --out xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          token: ${{secrets.CODECOV_TOKEN}}
